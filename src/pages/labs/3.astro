---
import Layout from "../../layouts/Layout.astro";
import { rearrangeStacks } from "../../algorithms/stacksRearrange";
import StacksLab from "../../components/StacksLab.tsx";

const example = [
  [1, 2],
  [3, 1],
  [3]
];
const res = rearrangeStacks(example);
---

<Layout title="Лабораторная 3 — Стэки/очереди">
  <section class="mb-6">
    <h1 class="text-2xl font-semibold">ЛР3. Расстановка контейнеров по стопкам</h1>
    <p class="mt-2 text-muted">Грубый жадный алгоритм генерирует последовательность перестановок. Минимизировать шаги не требуется.</p>
    <details class="mt-4">
      <summary class="cursor-pointer select-none text-accent">Текст задания</summary>
      <div class="mt-3 text-sm text-muted space-y-3">
        <p>На складе хранятся контейнеры с товарами N различных видов. Все контейнеры составлены в N стопок. В каждой стопке могут находиться товары любых видов. Стопка может быть первоначально пустой. Автопогрузчик может взять верхний контейнер из любой стопки и поставить его сверху в любую стопку. Необходимо расставить все контейнеры с товаром первого вида в первую стопку, второго — во вторую и т.д.</p>
        <p>В первой строке входных данных записано одно натуральное число N, не превосходящее 500.</p>
        <p>В следующих N строках описаны стопки контейнеров: сначала записано число k<sub>i</sub> — количество контейнеров в i-й стопке, а затем k<sub>i</sub> чисел — виды товара в контейнерах в данной стопке, снизу вверх. В каждой стопке вначале не более 500 контейнеров (в процессе переноса контейнеров это ограничение может быть нарушено).</p>
        <p>Программа должна вывести описание действий автопогрузчика: для каждого действия напечатать два числа – из какой стопки брать контейнер и в какую стопку класть. Минимизировать количество операций не требуется. Если задача не имеет решения, необходимо вывести одно число 0. Если контейнеры изначально правильно размещены по стопкам, то выводить ничего не нужно.</p>
      </div>
    </details>
  </section>

  <div class="card p-4 overflow-auto">
    <h2 class="font-medium mb-2">Пример</h2>
    <pre class="text-sm">{JSON.stringify(example)}</pre>
    <h3 class="font-medium mt-4">Ходы</h3>
    <pre class="text-sm">{res.possible ? res.moves.map(m=>m.join(' ')).join('\n') : '0'}</pre>
  </div>

  <div class="mt-6">
    <h2 class="font-medium mb-2">Проверить свои данные</h2>
    <StacksLab client:load />
  </div>
</Layout>


